/*
 * Copyright (C) 2011 NATSRL @ UMD (University Minnesota Duluth, US) and
 * Software and System Laboratory @ KNU (Kangwon National University, Korea) 
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */

/*
 * ResultMerger.java
 *
 * Created on Jul 31, 2011, 1:14:34 PM
 */
package edu.umn.natsrl.ticas.plugin.traveltimeIndexer;

import edu.umn.natsrl.util.FileHelper;
import java.io.File;
import java.io.FileOutputStream;
import java.io.InputStream;
import java.io.OutputStream;
import jxl.Cell;
import jxl.Sheet;
import jxl.Workbook;
import jxl.write.Label;
import jxl.write.Number;
import jxl.write.WritableSheet;
import jxl.write.WritableWorkbook;

/**
 *
 * @author Chongmyung Park
 */
public class ResultMerger extends javax.swing.JDialog {

    /** Creates new form ResultMerger */
    public ResultMerger(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        loadTemplate();
    }

    
    
    private void doMerge() {
        try {
        String beforeFile = this.tbxBefore.getText();
        String afterFile = this.tbxAfter.getText();
        Workbook before = Workbook.getWorkbook(new File(beforeFile));
        Workbook after = Workbook.getWorkbook(new File(afterFile));
        String beforeDuration = before.getSheet("meta").getCell("B2").getContents().substring(0, 7);
        String afterDuration = after.getSheet("meta").getCell("B2").getContents().substring(0, 7);
        Workbook template = Workbook.getWorkbook(new File("./VSL Evaulation Template.xls"));
        WritableWorkbook merge = Workbook.createWorkbook(new File("VSL Evaulation (" + beforeDuration + " ~ " + afterDuration+").xls"), template);
        WritableSheet afterSheet = merge.getSheet("after");
        WritableSheet beforeSheet = merge.getSheet("before");
        clearSheet(afterSheet);
        clearSheet(beforeSheet);
        copySheet(before.getSheet("data"), beforeSheet);
        copySheet(after.getSheet("data"), afterSheet);
        merge.write();
        merge.close();
        } catch(Exception ex) {
            ex.printStackTrace();
        }
    }    
    
    
    private void loadTemplate()
    {
        try {            
            File file = new File("./VSL Evaulation Template.xls");            
            if(file.exists()) return;
            final String resourcesPath = "resources/template.xls";
            InputStream is = this.getClass().getResourceAsStream(resourcesPath);
            OutputStream out=new FileOutputStream(file);
            byte buf[]=new byte[1024];
            int len;
            while((len=is.read(buf))>0)
            out.write(buf,0,len);
            out.close();
            is.close();    
        } catch(Exception ex) {
            ex.printStackTrace();
        }
    }
    
    private void clearSheet(WritableSheet sheet) {
        for(int i=0; i<sheet.getRows(); i++) sheet.removeRow(i);
    }    
    
    private void copySheet(Sheet src, WritableSheet dst) {
        try {
        for(int r=0; r<src.getRows(); r++) {
          for(int c=0; c<src.getColumns(); c++)  {
              Cell cell = src.getCell(c, r);
              try {
                  double v = Double.parseDouble(cell.getContents());
                  dst.addCell(new Number(c, r, v));
              } catch(Exception ex) {
                dst.addCell(new Label(c, r, cell.getContents()));
              }
          }
        } 
        } catch(Exception ex) {
            ex.printStackTrace();
        }
    }    
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        btnSelectBefore = new javax.swing.JButton();
        tbxBefore = new javax.swing.JTextField();
        tbxAfter = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        btnSelectAfter = new javax.swing.JButton();
        btnMerge = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("VSL Evaulation Result Merger");

        jLabel1.setFont(new java.awt.Font("Verdana", 0, 11));
        jLabel1.setText("Before");

        btnSelectBefore.setFont(new java.awt.Font("Verdana", 0, 11));
        btnSelectBefore.setText("Browse");
        btnSelectBefore.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSelectBeforeActionPerformed(evt);
            }
        });

        tbxBefore.setFont(new java.awt.Font("Verdana", 0, 11)); // NOI18N

        tbxAfter.setFont(new java.awt.Font("Verdana", 0, 11)); // NOI18N

        jLabel2.setFont(new java.awt.Font("Verdana", 0, 11));
        jLabel2.setText("After");

        btnSelectAfter.setFont(new java.awt.Font("Verdana", 0, 11));
        btnSelectAfter.setText("Browse");
        btnSelectAfter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSelectAfterActionPerformed(evt);
            }
        });

        btnMerge.setText("Merge");
        btnMerge.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMergeActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnMerge, javax.swing.GroupLayout.DEFAULT_SIZE, 375, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnSelectAfter)
                            .addComponent(btnSelectBefore))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(tbxAfter, javax.swing.GroupLayout.DEFAULT_SIZE, 224, Short.MAX_VALUE)
                            .addComponent(tbxBefore, javax.swing.GroupLayout.DEFAULT_SIZE, 224, Short.MAX_VALUE))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(tbxBefore, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSelectBefore))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(tbxAfter, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSelectAfter))
                .addGap(18, 18, 18)
                .addComponent(btnMerge, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnSelectBeforeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSelectBeforeActionPerformed
        this.tbxBefore.setText(FileHelper.chooseFileToOpen(".", "Select Before File", FileHelper.FileFilterForExcel));
    }//GEN-LAST:event_btnSelectBeforeActionPerformed

    private void btnSelectAfterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSelectAfterActionPerformed
        this.tbxAfter.setText(FileHelper.chooseFileToOpen(".", "Select After File", FileHelper.FileFilterForExcel));
    }//GEN-LAST:event_btnSelectAfterActionPerformed

    private void btnMergeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMergeActionPerformed
        doMerge();
    }//GEN-LAST:event_btnMergeActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                ResultMerger dialog = new ResultMerger(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {

                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnMerge;
    private javax.swing.JButton btnSelectAfter;
    private javax.swing.JButton btnSelectBefore;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JTextField tbxAfter;
    private javax.swing.JTextField tbxBefore;
    // End of variables declaration//GEN-END:variables




}
