/*
 * Copyright (C) 2011 NATSRL @ UMD (University Minnesota Duluth) and
 * Software and System Laboratory @ KNU (Kangwon National University, Korea) 
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
package edu.umn.natsrl.ticas.plugin.srte;

import edu.umn.natsrl.gadget.calendar.DayToggleListener;
import edu.umn.natsrl.infra.Section;
import edu.umn.natsrl.infra.TMO;
import edu.umn.natsrl.infra.section.SectionManager;
import edu.umn.natsrl.ticas.plugin.PluginFrame;
import edu.umn.natsrl.ticas.plugin.datareader.DateChecker;
import java.awt.Dimension;
import java.awt.Toolkit;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.ObjectOutputStream;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Vector;
import javax.swing.DefaultListModel;
import javax.swing.JComboBox;
import javax.swing.JOptionPane;

/**
 *
 * @author Soobin Jeon <j.soobin@gmail.com>
 */
public class EventEditor extends javax.swing.JFrame {
    private TMO tmo = TMO.getInstance();
    private Vector<Section> sections = new Vector<Section>();
    private Vector<TimeEventLists> timeeventlists = new Vector<TimeEventLists>();
    private TimeEventLists selectedEventList = null;
    private TimeEvent selectedTimeEvent = null;
    
    /**
     * Creates new form EventEditor
     */
    public EventEditor(Vector<TimeEventLists> eventlist) {
        timeeventlists = eventlist;
        initComponents();
        init();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        cbxStartHour = new javax.swing.JComboBox();
        jLabel28 = new javax.swing.JLabel();
        cbxStartMin = new javax.swing.JComboBox();
        cbxEndMin = new javax.swing.JComboBox();
        jLabel20 = new javax.swing.JLabel();
        cbxEndHour = new javax.swing.JComboBox();
        cbxBareMin = new javax.swing.JComboBox();
        jLabel29 = new javax.swing.JLabel();
        cbxBareHour = new javax.swing.JComboBox();
        jLabel7 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel_ST = new javax.swing.JLabel();
        jLabel_ET = new javax.swing.JLabel();
        cbxbyear = new javax.swing.JComboBox();
        cbxbmonth = new javax.swing.JComboBox();
        cbxbday = new javax.swing.JComboBox();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        cbxSection = new javax.swing.JComboBox();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tbxDesc = new javax.swing.JTextArea();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        tbxRoutes = new javax.swing.JTextArea();
        btnOpenSectionEditor = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        tbxListName = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        lbxEventList = new javax.swing.JList();
        cbxEventList = new javax.swing.JComboBox();
        jLabel5 = new javax.swing.JLabel();
        btnSaveEventList = new javax.swing.JButton();
        btnAddList = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        btnupdate = new javax.swing.JButton();
        btnDeleteEvent = new javax.swing.JButton();
        btnClearDataset = new javax.swing.JButton();
        btnDataAdd = new javax.swing.JButton();
        natsrlCalendar = new edu.umn.natsrl.gadget.calendar.NATSRLCalendar();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        cbxStartHour.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        cbxStartHour.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "00", "01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23" }));
        cbxStartHour.setMinimumSize(new java.awt.Dimension(40, 20));
        cbxStartHour.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                cbxStartHourMouseClicked(evt);
            }
        });

        jLabel28.setFont(new java.awt.Font("Verdana 12", 0, 12)); // NOI18N
        jLabel28.setText(":");

        cbxStartMin.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        cbxStartMin.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "00", "01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31", "32", "33", "34", "35", "36", "37", "38", "39", "40", "41", "42", "43", "44", "45", "46", "47", "48", "49", "50", "51", "52", "53", "54", "55", "56", "57", "58", "59" }));
        cbxStartMin.setMinimumSize(new java.awt.Dimension(40, 20));

        cbxEndMin.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        cbxEndMin.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "00", "01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31", "32", "33", "34", "35", "36", "37", "38", "39", "40", "41", "42", "43", "44", "45", "46", "47", "48", "49", "50", "51", "52", "53", "54", "55", "56", "57", "58", "59" }));
        cbxEndMin.setMinimumSize(new java.awt.Dimension(40, 20));

        jLabel20.setFont(new java.awt.Font("Verdana 12", 0, 12)); // NOI18N
        jLabel20.setText(":");

        cbxEndHour.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        cbxEndHour.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "00", "01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23" }));
        cbxEndHour.setMinimumSize(new java.awt.Dimension(40, 20));

        cbxBareMin.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        cbxBareMin.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "00", "01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31", "32", "33", "34", "35", "36", "37", "38", "39", "40", "41", "42", "43", "44", "45", "46", "47", "48", "49", "50", "51", "52", "53", "54", "55", "56", "57", "58", "59" }));
        cbxBareMin.setMinimumSize(new java.awt.Dimension(40, 20));

        jLabel29.setFont(new java.awt.Font("Verdana 12", 0, 12)); // NOI18N
        jLabel29.setText(":");

        cbxBareHour.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        cbxBareHour.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "00", "01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23" }));
        cbxBareHour.setMinimumSize(new java.awt.Dimension(40, 20));

        jLabel7.setText("BareLane Time");

        jLabel6.setText("End Time");

        jLabel4.setText("Start Time");

        cbxbyear.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "2012" }));

        cbxbmonth.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12" }));

        cbxbday.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31" }));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel_ET)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel6)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(cbxEndHour, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel20, javax.swing.GroupLayout.PREFERRED_SIZE, 3, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(5, 5, 5)
                                .addComponent(cbxEndMin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel_ST)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(cbxStartHour, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel28, javax.swing.GroupLayout.PREFERRED_SIZE, 3, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(5, 5, 5)
                                .addComponent(cbxStartMin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cbxbyear, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cbxbmonth, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cbxbday, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(cbxBareHour, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel29, javax.swing.GroupLayout.PREFERRED_SIZE, 3, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(5, 5, 5)
                        .addComponent(cbxBareMin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(10, 10, 10))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cbxStartHour, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbxStartMin, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel28)
                    .addComponent(jLabel4)
                    .addComponent(jLabel_ST))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cbxEndMin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbxEndHour, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel20)
                    .addComponent(jLabel6)
                    .addComponent(jLabel_ET))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cbxBareMin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbxBareHour, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel29)
                    .addComponent(cbxbyear, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbxbmonth, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbxbday, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7)))
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Section", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Verdana", 1, 12))); // NOI18N

        jLabel1.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        jLabel1.setText("Select Section");

        cbxSection.setFont(new java.awt.Font("Verdana 10", 0, 12)); // NOI18N
        cbxSection.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbxSectionActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        jLabel2.setText("Description");

        tbxDesc.setColumns(20);
        tbxDesc.setEditable(false);
        tbxDesc.setFont(new java.awt.Font("Verdana", 0, 10)); // NOI18N
        tbxDesc.setLineWrap(true);
        tbxDesc.setRows(2);
        jScrollPane2.setViewportView(tbxDesc);

        jLabel3.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        jLabel3.setText("Routes");

        tbxRoutes.setColumns(20);
        tbxRoutes.setEditable(false);
        tbxRoutes.setFont(new java.awt.Font("Verdana", 0, 10)); // NOI18N
        tbxRoutes.setLineWrap(true);
        tbxRoutes.setRows(2);
        jScrollPane3.setViewportView(tbxRoutes);

        btnOpenSectionEditor.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        btnOpenSectionEditor.setText("Edit");
        btnOpenSectionEditor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOpenSectionEditorActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addComponent(cbxSection, 0, 115, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnOpenSectionEditor)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cbxSection, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnOpenSectionEditor))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 69, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Event Info", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Verdana", 1, 12), java.awt.Color.black)); // NOI18N
        jPanel3.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N

        tbxListName.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N

        lbxEventList.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lbxEventListMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(lbxEventList);

        cbxEventList.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        cbxEventList.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cbxEventList.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbxEventListActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        jLabel5.setText("List Name");

        btnSaveEventList.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        btnSaveEventList.setText("Delete");
        btnSaveEventList.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveEventListActionPerformed(evt);
            }
        });

        btnAddList.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        btnAddList.setText("Add");
        btnAddList.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddListActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(tbxListName, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnAddList)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnSaveEventList))
                    .addComponent(cbxEventList, javax.swing.GroupLayout.PREFERRED_SIZE, 522, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(cbxEventList, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tbxListName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5)
                    .addComponent(btnSaveEventList)
                    .addComponent(btnAddList))
                .addGap(1, 1, 1))
        );

        btnupdate.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        btnupdate.setText("Update");
        btnupdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnupdateActionPerformed(evt);
            }
        });

        btnDeleteEvent.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        btnDeleteEvent.setText("Delete");
        btnDeleteEvent.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteEventActionPerformed(evt);
            }
        });

        btnClearDataset.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        btnClearDataset.setText("Clear");
        btnClearDataset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClearDatasetActionPerformed(evt);
            }
        });

        btnDataAdd.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        btnDataAdd.setText("Add Event");
        btnDataAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDataAddActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addComponent(natsrlCalendar, javax.swing.GroupLayout.PREFERRED_SIZE, 216, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnupdate, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnDeleteEvent, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnClearDataset, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnDataAdd, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(natsrlCalendar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(btnDataAdd)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnupdate)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnDeleteEvent)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnClearDataset)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(14, 14, 14)
                        .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(21, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void natsrlCalendarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_natsrlCalendarMouseClicked
        // TODO add your handling code here:

   }//GEN-LAST:event_natsrlCalendarMouseClicked

    private void cbxStartHourMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cbxStartHourMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_cbxStartHourMouseClicked

    private void cbxSectionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbxSectionActionPerformed
        setInfo();
    }//GEN-LAST:event_cbxSectionActionPerformed

    private void btnOpenSectionEditorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOpenSectionEditorActionPerformed
        this.tmo.openSectionEditor(this, true);
        this.loadSection();
    }//GEN-LAST:event_btnOpenSectionEditorActionPerformed

    private void btnSaveEventListActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveEventListActionPerformed
        // TODO add your handling code here:
        if(!isSelectedEventList())
            return;
        
        selectedEventList.deleteList();
        loadEventLists();
    }//GEN-LAST:event_btnSaveEventListActionPerformed

    private void btnupdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnupdateActionPerformed
        // TODO add your handling code here:
//        TimeEventLists tlist = new TimeEventLists();
//        tlist.load();
        saveDate(selectedTimeEvent);
    }//GEN-LAST:event_btnupdateActionPerformed

    private void btnDeleteEventActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteEventActionPerformed
        // TODO add your handling code here:
        if(!isSelectedEventList())
            return;
        if(!this.isSelectedTimeEvent())
            return;
        
        selectedEventList.RemoveTimeEvent(selectedTimeEvent);
        setEventListinfo();
        clearDataset();
        
    }//GEN-LAST:event_btnDeleteEventActionPerformed

    private void cbxEventListActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbxEventListActionPerformed
        // TODO add your handling code here:
        setEventListinfo();
    }//GEN-LAST:event_cbxEventListActionPerformed

    private void btnAddListActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddListActionPerformed
        // TODO add your handling code here:
        String lname = this.tbxListName.getText();
        if(timeeventlists != null){
            for(TimeEventLists tel : this.timeeventlists){
                if(tel.getName().equals(lname)){
                    JOptionPane.showMessageDialog(null, "There is a list of the same name");
                    return;
                }
            }
        }
        
        selectedEventList = new TimeEventLists(lname);
        this.selectedEventList.save();
        
        loadEventLists();
        clearDataset();
    }//GEN-LAST:event_btnAddListActionPerformed

    private void lbxEventListMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lbxEventListMouseClicked
        // TODO add your handling code here:
        setDateset();
    }//GEN-LAST:event_lbxEventListMouseClicked

    private void btnClearDatasetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClearDatasetActionPerformed
        // TODO add your handling code here:
        this.clearDataset();
    }//GEN-LAST:event_btnClearDatasetActionPerformed

    private void btnDataAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDataAddActionPerformed
        // TODO add your handling code here:
        saveDate();
    }//GEN-LAST:event_btnDataAddActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /*
         * Set the Nimbus look and feel
         */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /*
         * If Nimbus (introduced in Java SE 6) is not available, stay with the
         * default look and feel. For details see
         * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(EventEditor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(EventEditor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(EventEditor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(EventEditor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /*
         * Create and display the form
         */
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
//                new EventEditor().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAddList;
    private javax.swing.JButton btnClearDataset;
    private javax.swing.JButton btnDataAdd;
    private javax.swing.JButton btnDeleteEvent;
    private javax.swing.JButton btnOpenSectionEditor;
    private javax.swing.JButton btnSaveEventList;
    private javax.swing.JButton btnupdate;
    private javax.swing.JComboBox cbxBareHour;
    private javax.swing.JComboBox cbxBareMin;
    private javax.swing.JComboBox cbxEndHour;
    private javax.swing.JComboBox cbxEndMin;
    private javax.swing.JComboBox cbxEventList;
    private javax.swing.JComboBox cbxSection;
    private javax.swing.JComboBox cbxStartHour;
    private javax.swing.JComboBox cbxStartMin;
    private javax.swing.JComboBox cbxbday;
    private javax.swing.JComboBox cbxbmonth;
    private javax.swing.JComboBox cbxbyear;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel_ET;
    private javax.swing.JLabel jLabel_ST;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JList lbxEventList;
    private edu.umn.natsrl.gadget.calendar.NATSRLCalendar natsrlCalendar;
    private javax.swing.JTextArea tbxDesc;
    private javax.swing.JTextField tbxListName;
    private javax.swing.JTextArea tbxRoutes;
    // End of variables declaration//GEN-END:variables

    /**
     * init Editor
     */
    private void init() {
        setEditor();
        loadSection();
        loadEventLists();
        initBareLaneTime();
        
        //set Calendar Date
        DateChecker dc = DateChecker.getInstance();
        this.natsrlCalendar.setDateChecker(dc);
        
        DayToggleListener cb = new DayToggleListener(){
            @Override
            public void onButtonToggle(boolean toggle, int day) {
                doDayToggleListener(toggle,day);
            }
        };
        this.natsrlCalendar.setDayToggleListener(cb);
        
        //set calendar label
        this.jLabel_ST.setText("");
        this.jLabel_ET.setText("");
        
        
        
        clearDataset();
    }
    
    private void doDayToggleListener(boolean toggle, int day) {
        this.natsrlCalendar.addMouseListener(null);
        Calendar[] selectedDates = this.natsrlCalendar.getSelectedDates();
        SimpleDateFormat dateformatter = new SimpleDateFormat("d MMM, y");
        if(selectedDates.length > 2){
            JOptionPane.showMessageDialog(null, "Select less than 2 days..");
            return;
        }
        if(selectedDates.length <= 2 && selectedDates.length > 0){
            if(selectedDates.length == 1){
                this.jLabel_ST.setText(dateformatter.format(selectedDates[0].getTime()));
                this.jLabel_ET.setText(dateformatter.format(selectedDates[0].getTime()));
            }else
            {
                this.jLabel_ST.setText(dateformatter.format(selectedDates[0].getTime()));
                this.jLabel_ET.setText(dateformatter.format(selectedDates[1].getTime()));
            }
        }
    }

    private void loadEventLists(){
        if(timeeventlists != null)
            timeeventlists.clear();
        try{
            timeeventlists.addAll(TimeEventLists.loadAllEvents());
            this.cbxEventList.removeAllItems();

            for(TimeEventLists s : timeeventlists){
                System.out.println(s.getName());
                this.cbxEventList.addItem(s);
            }

            setEventListinfo();
        }catch(Exception e){
            e.printStackTrace();
        }
    }
    private void loadSection() {
        SectionManager sm = tmo.getSectionManager();
        if(sm == null) return;
        sm.loadSections();
        sections.addAll(sm.getSections());
        this.cbxSection.removeAllItems();
        
        for(Section s : sections){
            this.cbxSection.addItem(s);
        }
        
        setInfo();
    }

    /**
     * Update GUI according to section change
     */
    private void setInfo() {
        Section section = (Section) this.cbxSection.getSelectedItem();
        if (section == null) {
            this.tbxDesc.setText("");
            this.tbxRoutes.setText("");
            return;
        }

        this.tbxRoutes.setText(section.getRoutes());
        this.tbxDesc.setText(section.getDescription());
    }

    private void setEventListinfo() {
        selectedEventList = (TimeEventLists)this.cbxEventList.getSelectedItem();
        DefaultListModel dm = new DefaultListModel();
        
        if(selectedEventList == null)
            return;
          
        for(TimeEvent te : selectedEventList.getTimeEvents()){
            dm.addElement(te);
        }
//        _list.setModel(dm);
        lbxEventList.setModel(dm);
        clearDataset();
    }

    private void setDateset() {
        selectedTimeEvent = (TimeEvent)this.lbxEventList.getSelectedValue();
        
        if(!isSelectedTimeEvent())
            return;
        if(this.sections == null)
            return;
        
        int sindex = -1;
        for(int i = 0;i<sections.size();i++){
            if(sections.get(i).getName().equals(selectedTimeEvent.getSectionName())){
                sindex = i;
                break;
            }
        }
        if(sindex == -1)
            return;
        
        //set section
        this.cbxSection.setSelectedIndex(sindex);
        
        //set Calendar
        this.natsrlCalendar.clearAll();
//        this.natsrlCalendar.setMonth(selectedTimeEvent.getStartTime());
        Calendar sd,ed,bd;
        sd = selectedTimeEvent.getStartTime();
        ed = selectedTimeEvent.getEndTime();
        bd = selectedTimeEvent.getBareLaneRegainTime();
        this.natsrlCalendar.preselectDate(selectedTimeEvent.getStartTime());
        if(sd.get(Calendar.YEAR) != ed.get(Calendar.YEAR) ||
                sd.get(Calendar.MONTH) != ed.get(Calendar.MONTH) ||
                sd.get(Calendar.DAY_OF_MONTH) != ed.get(Calendar.DAY_OF_MONTH))
            this.natsrlCalendar.preselectDate(selectedTimeEvent.getEndTime());
        
        //set date
        //start time
        setcbx(cbxStartHour,findcbxindex(cbxStartHour,sd.get(Calendar.HOUR_OF_DAY)));
        setcbx(cbxStartMin,findcbxindex(cbxStartMin,sd.get(Calendar.MINUTE)));
        //end time
        setcbx(cbxEndHour,findcbxindex(cbxEndHour,ed.get(Calendar.HOUR_OF_DAY)));
        setcbx(cbxEndMin,findcbxindex(cbxEndMin,ed.get(Calendar.MINUTE)));
        //bare lane
        
        setcbx(cbxbyear,findcbxindex(cbxbyear,bd.get(Calendar.YEAR)));
        setcbx(cbxbmonth,findcbxindex(cbxbmonth,bd.get(Calendar.MONTH)+1));
        setcbx(cbxbday,findcbxindex(cbxbday,bd.get(Calendar.DAY_OF_MONTH)));
        setcbx(cbxBareHour,findcbxindex(cbxBareHour,bd.get(Calendar.HOUR_OF_DAY)));
        setcbx(cbxBareMin,findcbxindex(cbxBareMin,bd.get(Calendar.MINUTE)));
        
        setModifyButton(true);
    }

    private int findcbxindex(JComboBox cbx, int get) {
        for(int i=0;i<cbx.getItemCount();i++){
            int sitem = Integer.parseInt((String)cbx.getItemAt(i));
            if(sitem == get)
                return i;
        }
        
        return -1;
    }

    private void setcbx(JComboBox cbx, int findcbxindex) {
        if(findcbxindex == -1)
            return;
        
        cbx.setSelectedIndex(findcbxindex);
    }
    
    private void clearDataset(){
        if(this.sections == null)
            return;
        
        //set section
        this.cbxSection.setSelectedIndex(0);
        
        //set Calendar
        this.natsrlCalendar.clearAll();
        
        //set date
        //start time
        setcbx(cbxStartHour,0);
        setcbx(cbxStartMin,0);
        //end time
        setcbx(cbxEndHour,0);
        setcbx(cbxEndMin,0);
        //bare lane
        setcbx(cbxBareHour,0);
        setcbx(cbxBareMin,0);
        initBareLaneTime();
        setModifyButton(false);
    }

    private void saveDate(){
        saveDate(null);
    }
    private void saveDate(TimeEvent se) {
        if(!isSelectedEventList())
            return;
        
        Calendar[] selectedDates = this.natsrlCalendar.getSelectedDates();
        
        if(selectedDates.length > 2){
            JOptionPane.showMessageDialog(null, "Select less than 2 days..");
            return;
        }
        
        if(selectedDates.length <= 0){
            JOptionPane.showMessageDialog(null, "Select days..");
            return;
        }
        
        Section section = (Section) this.cbxSection.getSelectedItem();
        if (section == null) {
            return;
        }
        
        Calendar cs,ce,cb;
        if(selectedDates.length == 1){
            cs = (Calendar)selectedDates[0].clone();
            ce = (Calendar)selectedDates[0].clone();
        }else{
            cs = (Calendar)selectedDates[0].clone();
            ce = (Calendar)selectedDates[1].clone();
        }
        // set period for staring time
//        Calendar cs = this.calStartDate.getSelectedDate();
        int hour = Integer.parseInt(this.cbxStartHour.getSelectedItem().toString());
        cs.set(Calendar.HOUR_OF_DAY, hour);
        cs.set(Calendar.MINUTE, Integer.parseInt(this.cbxStartMin.getSelectedItem().toString()));
//        cs.set(Calendar.SECOND, 0);
       
        // set period for ending time
//        Calendar ce = this.calEndDate.getSelectedDate();
        hour = Integer.parseInt(this.cbxEndHour.getSelectedItem().toString());
        ce.set(Calendar.HOUR_OF_DAY, hour);
        ce.set(Calendar.MINUTE, Integer.parseInt(this.cbxEndMin.getSelectedItem().toString()));
        //barelane
        cb = Calendar.getInstance();
        cb.set(Calendar.YEAR, Integer.parseInt(this.cbxbyear.getSelectedItem().toString()));
        cb.set(Calendar.MONTH, Integer.parseInt(this.cbxbmonth.getSelectedItem().toString())-1);
        cb.set(Calendar.DAY_OF_MONTH, Integer.parseInt(this.cbxbday.getSelectedItem().toString()));
        hour = Integer.parseInt(this.cbxBareHour.getSelectedItem().toString());
        cb.set(Calendar.HOUR_OF_DAY, hour);
        cb.set(Calendar.MINUTE, Integer.parseInt(this.cbxBareMin.getSelectedItem().toString()));
        cb.set(Calendar.SECOND, 0);
        
        
        
        Calendar cc = this.natsrlCalendar.getSelectedDates()[0];
        
        TimeEvent te = null;
        if(se == null) //add
            te = new TimeEvent();
        else
            te = se; //update
        
        

        this.tbxRoutes.setText(section.getRoutes());
        this.tbxDesc.setText(section.getDescription());
        
        te.setSection(section.getName());
        te.setAllTime(cs, ce, cb);
        
        //if Add
        if(se == null)
            this.selectedEventList.AddTimeEvent(te);
        else //update
            this.selectedEventList.UpdateEvent(te);
        
        this.selectedEventList.save();
        setEventListinfo();
        clearDataset();
    }

    private boolean isSelectedEventList() {
        if(selectedEventList == null){
            JOptionPane.showMessageDialog(null, "Select Event List");
            return false;
        }else
            return true;
    }
    
    private boolean isSelectedTimeEvent() {
        if(this.selectedTimeEvent == null){
            JOptionPane.showMessageDialog(null, "Select Event");
            return false;
        }else
            return true;
    }

    private void setModifyButton(boolean b) {
        toggleUpdateButton(b);
        toggleDeleteButton(b);
    }
    
    private void toggleUpdateButton(boolean isupdate) {
            this.btnupdate.setEnabled(isupdate);
    }

    private void toggleDeleteButton(boolean b) {
        this.btnDeleteEvent.setEnabled(b);
    }

    private void setEditor() {
        Toolkit tk = Toolkit.getDefaultToolkit();
        Dimension screenSize = tk.getScreenSize();
        int screenHeight = screenSize.height;
        int screenWidth = screenSize.width;
        this.setLocation(screenWidth / 4, screenHeight / 4);
        this.setTitle("Event Editor of SRTE Plugin");
        this.setResizable(false);
    }

    private void initBareLaneTime() {
        Calendar ctime = Calendar.getInstance();
        int currentyear = ctime.get(Calendar.YEAR);
        this.cbxbyear.removeAllItems();
        setcbx(cbxbmonth,0);
        setcbx(cbxbday,0);
        for(int i=0;i<20;i++){
            this.cbxbyear.addItem(String.valueOf(currentyear--));
        }
    }
}
